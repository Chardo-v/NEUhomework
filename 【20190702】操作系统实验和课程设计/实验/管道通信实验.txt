基本要求：
实现父子进程通过管道进行通信。
模型与生产者消费者模型相同，缓冲区<=>管道；
父进程至少开3个子进程，然后等待从管道里面读数据，子进程写数据，睡眠不要乱加；
fork()创建的子进程有没有先后？
子进程从哪儿执行？
父子进程代码是否相同？数据区是否一样？
子进程写东西父进程从管道里读出来。

拓展：
互斥和同步：父进程要读管道，要等到子进程写完后：wait()互斥：lockf()
1. 同步
不同步或互斥未成功的现象：父进程不等子进程，发现空的就抛个error出来：子进程sleep？
read默认在阻塞模式下，本身就很好地互斥/同步了
wait能不能等待所有子进程都结束再结束？不是。任意一个结束wait就走了，怎么做呢？？？
2. 互斥
多个子进程写东西会不会乱序？如：lockf()不加会出现吗？小于4096时是原子级操作，不会出现，若大于4096字节？